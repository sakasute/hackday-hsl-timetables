{"version":3,"sources":["redux.js","components/Timetable.js","components/StopInfo.js","App.js","index.js"],"names":["getCurrentPosition","options","arguments","length","undefined","Promise","resolve","reject","navigator","geolocation","composeEnhancers","window","compose","createStore","state","action","type","Object","objectSpread","loading","nearbyTimetables","payload","stopsByRadius","edges","map","edge","node","stop","distance","response","swipeStatus","applyMiddleware","thunk","TimetableList","styled","ul","_templateObject","Timetable","_ref","stoptimes","now","Date","midnight","getFullYear","getMonth","getDate","secondsSinceMidnight","Math","floor","getTime","nextStops","stoptime","react_default","a","createElement","key","realtimeArrival","concat","headsign","arrivalTime","max","calculateArrivalMinutes","StopInfoWrapper","article","StopInfo_templateObject","StopName","h2","_templateObject2","Desc","h3","_templateObject3","StopInfo","stopInfo","name","code","desc","components_Timetable","stoptimesWithoutPatterns","GlobalStyle","createGlobalStyle","App_templateObject","Map","ReactMapboxGl","accessToken","ReactRedux","dispatch","fetchNearbyTimetables","asyncToGenerator","regenerator_default","mark","_callee","urlStr","url","lat","lon","radius","position","query","wrap","_context","prev","next","location","href","URL","searchParams","get","console","log","sent","coords","latitude","longitude","parseFloat","graphqlRequest","then","data","catch","error","finally","_x","apply","this","props","React","useEffect","_React$useState","useState","_React$useState2","slicedToArray","stopPopup","setStopPopup","style","containerStyle","height","width","center","zoom","onClick","lib_esm","id","paint","circle-radius","circle-color","coordinates","layout","icon-image","icon-size","gtfsId","components_StopInfo","ReactDOM","render","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5e1b49d8.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { request as graphqlRequest } from \"graphql-request\";\nimport thunk from \"redux-thunk\";\n\nconst SWIPE_RIGHT = \"SWIPE_RIGHT\";\nconst SWIPE_LEFT = \"SWIPE_LEFT\";\nconst FETCH_START = \"FETCH_START\";\nconst FETCH_SUCCESS = \"FETCH_SUCCESS\";\nconst LOCATION_UPDATED = \"LOCATION_UPDATED\";\n\nfunction getCurrentPosition(options = {}) {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  });\n}\n\nexport const fetchNearbyTimetables = () => async dispatch => {\n  dispatch({ type: FETCH_START });\n\n  const urlStr = window.location.href;\n  const url = new URL(urlStr);\n\n  let lat = url.searchParams.get(\"lat\");\n  let lon = url.searchParams.get(\"lon\");\n  let radius = url.searchParams.get(\"radius\");\n\n  if (!lat || !lon) {\n    console.log(\"geolocation start\");\n    const position = await getCurrentPosition();\n    console.log(\"geolocation end\", position);\n    lat = position.coords.latitude;\n    lon = position.coords.longitude;\n  } else {\n    lat = parseFloat(lat);\n    lon = parseFloat(lon);\n  }\n\n  if (!radius) {\n    radius = 500;\n  }\n\n  dispatch({ type: LOCATION_UPDATED, payload: { lat, lon } });\n\n  const query = `{\n    stopsByRadius(lat:${lat}, lon:${lon}, radius:${radius}) {\n      edges {\n        node {\n          stop {\n            gtfsId\n            name\n            code\n            desc\n            lat\n            lon\n              stoptimesWithoutPatterns {\n              scheduledArrival\n              realtimeArrival\n              arrivalDelay\n              scheduledDeparture\n              realtimeDeparture\n              departureDelay\n              realtime\n              realtimeState\n              serviceDay\n              headsign\n            }\n          }\n          distance\n        }\n      }\n    }\n  }`;\n\n  console.log(\"query start\");\n\n  graphqlRequest(\n    \"https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql\",\n    query\n  )\n    .then(data => dispatch({ type: FETCH_SUCCESS, payload: data }))\n    .catch(error => console.log(error))\n    .finally(() => console.log(\"query end\"));\n};\n\n// export const swipeRight = () => ({\n//   type: SWIPE_RIGHT\n// });\n//\n// export const swipeLeft = () => ({\n//   type: SWIPE_LEFT\n// });\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case FETCH_START:\n      return { ...state, loading: true };\n    case FETCH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        nearbyTimetables: action.payload.stopsByRadius.edges.map(edge => ({\n          ...edge.node.stop,\n          distance: edge.node.distance\n        }))\n      };\n    case LOCATION_UPDATED:\n      return {\n        ...state,\n        geolocation: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Create redux store.\nconst composeEnhancers =\n  window[\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\"] || compose;\nexport default createStore(\n  reducer,\n  { loading: false, response: null, swipeStatus: \"INITIAL\" },\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TimetableList = styled.ul`\n  list-style: none;\n  padding-left: 0;\n\n  li {\n    padding: 5px 0;\n    font-weight: normal;\n  }\n`;\n\nconst Timetable = ({ stoptimes }) => {\n  const now = new Date();\n\n  // FIXME: the actual midnight is midnight of the departure time\n  const midnight = new Date(\n    now.getFullYear(),\n    now.getMonth(),\n    now.getDate(),\n    0,\n    0,\n    0\n  );\n\n  const calculateArrivalMinutes = (arrivalTime, secondsSinceMidnight) => {\n    return Math.max(Math.floor((arrivalTime - secondsSinceMidnight) / 60), 0);\n  };\n\n  const secondsSinceMidnight = Math.floor(\n    (now.getTime() - midnight.getTime()) / 1000\n  );\n\n  const nextStops = stoptimes.map(stoptime => (\n    <li key={stoptime.realtimeArrival}>{`${stoptime.headsign} (${calculateArrivalMinutes(\n      stoptime.realtimeArrival,\n      secondsSinceMidnight\n    )} min)`}</li>\n  ));\n\n  return <TimetableList>{nextStops}</TimetableList>;\n};\n\nexport default Timetable;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Timetable from \"./Timetable\";\n\nconst StopInfoWrapper = styled.article`\n  vertical-align: top;\n`;\n\nconst StopName = styled.h2`\n  margin: 0.5em 0 0.5em 0;\n  font-weight: normal;\n`;\n\nconst Desc = styled.h3`\n  margin: 0 0 1em 0;\n`;\n\nconst StopInfo = ({ stopInfo }) => {\n  return (\n    <StopInfoWrapper>\n      <StopName>{`${stopInfo.name}, ${\n        stopInfo.code\n      } (${stopInfo.distance} m)`}</StopName>\n      <Desc>{stopInfo.desc}</Desc>\n      <Timetable stoptimes={stopInfo.stoptimesWithoutPatterns} />\n    </StopInfoWrapper>\n  );\n};\n\nexport default StopInfo;\n","import React from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport ReactMapboxGl, { Layer, Feature, Popup } from \"react-mapbox-gl\";\n\nimport * as ReactRedux from \"react-redux\";\nimport { fetchNearbyTimetables } from \"./redux\";\n\nimport StopInfo from \"./components/StopInfo.js\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: lightgray;\n  }\n\n  body {\n    margin: 0;\n    font-family: sans-serif;\n    font-weight: bold;\n  }\n`;\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    \"pk.eyJ1Ijoic2FrYXN1dGUtYWxtYSIsImEiOiJjanZ4aGc2OG8wNHM3NDNycnNyNTBhOThlIn0.70Nsp4cpsqajXtCLiFS5aA\"\n});\n\nfunction App(props) {\n  const {\n    geolocation,\n    nearbyTimetables,\n    loading,\n    fetchNearbyTimetables\n  } = props;\n\n  React.useEffect(() => {\n    fetchNearbyTimetables();\n  }, [fetchNearbyTimetables]);\n\n  const [stopPopup, setStopPopup] = React.useState(null);\n  console.log(nearbyTimetables);\n  return (\n    <main>\n      <GlobalStyle />\n      {loading || !nearbyTimetables ? (\n        <p>loading...</p>\n      ) : (\n        <Map\n          style=\"mapbox://styles/mapbox/streets-v10\"\n          containerStyle={{\n            height: \"100vh\",\n            width: \"100vw\"\n          }}\n          center={[geolocation.lon, geolocation.lat]}\n          zoom={[15]}\n          onClick={() => setStopPopup(null)}\n        >\n          <Layer\n            type=\"circle\"\n            id=\"geolocation\"\n            paint={{ \"circle-radius\": 15, \"circle-color\": \"#ff512c\" }}\n          >\n            <Feature coordinates={[geolocation.lon, geolocation.lat]} />\n          </Layer>\n          <Layer\n            type={\"symbol\"}\n            id=\"stops\"\n            layout={{ \"icon-image\": \"bus-15\", \"icon-size\": 1 }}\n          >\n            {nearbyTimetables.map(stop => {\n              return (\n                <Feature key={stop.gtfsId} coordinates={[stop.lon, stop.lat]} onClick={() => setStopPopup(stop)} />\n              );\n            })}\n          </Layer>\n          {stopPopup && (\n            <Popup\n              coordinates={[stopPopup.lon, stopPopup.lat]}\n            >\n              <StopInfo\n                key={stopPopup.gtfsId}\n                stopInfo={stopPopup}\n              />\n            </Popup>\n          )}\n        </Map>\n      )}\n    </main>\n  );\n}\n\nconst mapStateToProps = state => ({\n  nearbyTimetables: state.nearbyTimetables,\n  loading: state.loading,\n  geolocation: state.geolocation\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchNearbyTimetables: () => dispatch(fetchNearbyTimetables())\n});\n\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["redux.js","components/Timetable.js","components/StopInfo.js","App.js","index.js"],"names":["getCurrentPosition","options","arguments","length","undefined","Promise","resolve","reject","navigator","geolocation","composeEnhancers","window","compose","createStore","state","action","type","Object","objectSpread","loading","nearbyTimetables","payload","stopsByRadius","edges","map","edge","node","stop","distance","isCustomLocation","position","response","swipeStatus","applyMiddleware","thunk","TimetableList","styled","ul","_templateObject","Timetable","_ref","stoptimes","now","Date","nextStops","stoptime","react_default","a","createElement","key","realtimeArrival","concat","trip","routeShortName","headsign","arrivalTime","departureTimestamp","departureDate","secondsSinceMidnight","Math","floor","getTime","max","calculateArrivalMinutes","serviceDay","StopInfoWrapper","article","StopInfo_templateObject","StopName","h2","_templateObject2","Desc","h3","_templateObject3","StopInfo","stopInfo","name","code","desc","components_Timetable","stoptimesWithoutPatterns","GlobalStyle","createGlobalStyle","App_templateObject","Map","ReactMapboxGl","accessToken","ReactRedux","dispatch","fetchNearbyTimetables","asyncToGenerator","regenerator_default","mark","_callee","urlStr","url","lat","lon","radius","query","wrap","_context","prev","next","location","href","URL","searchParams","get","console","log","sent","coords","latitude","longitude","parseFloat","graphqlRequest","then","data","catch","error","finally","_x","apply","this","props","zoom","React","useEffect","_React$useState","useState","_React$useState2","slicedToArray","stopPopup","setStopPopup","style","containerStyle","height","width","center","onClick","lib_esm","id","paint","circle-radius","circle-color","coordinates","layout","icon-image","icon-size","gtfsId","components_StopInfo","ReactDOM","render","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fbeb2b76.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { request as graphqlRequest } from \"graphql-request\";\nimport thunk from \"redux-thunk\";\n\nconst SWIPE_RIGHT = \"SWIPE_RIGHT\";\nconst SWIPE_LEFT = \"SWIPE_LEFT\";\nconst FETCH_START = \"FETCH_START\";\nconst FETCH_SUCCESS = \"FETCH_SUCCESS\";\nconst LOCATION_UPDATED = \"LOCATION_UPDATED\";\n\nfunction getCurrentPosition(options = {}) {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  });\n}\n\nexport const fetchNearbyTimetables = () => async dispatch => {\n  dispatch({ type: FETCH_START });\n\n  const urlStr = window.location.href;\n  const url = new URL(urlStr);\n\n  let isCustomLocation = true;\n  let lat = url.searchParams.get(\"lat\");\n  let lon = url.searchParams.get(\"lon\");\n  let radius = url.searchParams.get(\"radius\");\n\n  if (!lat || !lon) {\n    console.log(\"geolocation start\");\n    const position = await getCurrentPosition();\n    console.log(\"geolocation end\", position);\n    lat = position.coords.latitude;\n    lon = position.coords.longitude;\n    isCustomLocation = false;\n  } else {\n    lat = parseFloat(lat);\n    lon = parseFloat(lon);\n  }\n\n  if (!radius) {\n    radius = 500;\n  }\n\n  dispatch({ type: LOCATION_UPDATED, payload: {isCustomLocation, position: { lat, lon }} });\n\n  const query = `{\n    stopsByRadius(lat:${lat}, lon:${lon}, radius:${radius}) {\n      edges {\n        node {\n          stop {\n            gtfsId\n            name\n            code\n            desc\n            lat\n            lon\n              stoptimesWithoutPatterns {\n              scheduledArrival\n              realtimeArrival\n              arrivalDelay\n              scheduledDeparture\n              realtimeDeparture\n              departureDelay\n              realtime\n              realtimeState\n              serviceDay\n              headsign\n              trip {\n                routeShortName\n                directionId\n              } \n            }\n          }\n          distance\n        }\n      }\n    }\n  }`;\n\n  console.log(\"query start\");\n\n  graphqlRequest(\n    \"https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql\",\n    query\n  )\n    .then(data => dispatch({ type: FETCH_SUCCESS, payload: data }))\n    .catch(error => console.log(error))\n    .finally(() => console.log(\"query end\"));\n};\n\n// export const swipeRight = () => ({\n//   type: SWIPE_RIGHT\n// });\n//\n// export const swipeLeft = () => ({\n//   type: SWIPE_LEFT\n// });\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case FETCH_START:\n      return { ...state, loading: true };\n    case FETCH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        nearbyTimetables: action.payload.stopsByRadius.edges.map(edge => ({\n          ...edge.node.stop,\n          distance: edge.node.distance\n        }))\n      };\n    case LOCATION_UPDATED:\n      return {\n        ...state,\n        isCustomLocation: action.payload.isCustomLocation,\n        geolocation: action.payload.position\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Create redux store.\nconst composeEnhancers =\n  window[\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\"] || compose;\nexport default createStore(\n  reducer,\n  { loading: false, response: null, swipeStatus: \"INITIAL\" },\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TimetableList = styled.ul`\n  list-style: none;\n  padding-left: 0;\n\n  li {\n    padding: 5px 0;\n    font-weight: normal;\n  }\n`;\n\nconst Timetable = ({ stoptimes }) => {\n  const now = new Date();\n\n  const calculateArrivalMinutes = (arrivalTime, departureTimestamp) => {\n    const departureDate = new Date(departureTimestamp * 1000);\n    const secondsSinceMidnight = Math.floor(\n      (now.getTime() - departureDate.getTime()) / 1000\n    );\n    return Math.max(Math.floor((arrivalTime - secondsSinceMidnight) / 60), 0);\n  };\n\n  const nextStops = stoptimes.map(stoptime => (\n    <li key={stoptime.realtimeArrival}>{`${stoptime.trip.routeShortName} ${\n      stoptime.headsign\n    } (${calculateArrivalMinutes(\n      stoptime.realtimeArrival,\n      stoptime.serviceDay\n    )} min)`}</li>\n  ));\n\n  return <TimetableList>{nextStops}</TimetableList>;\n};\n\nexport default Timetable;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Timetable from \"./Timetable\";\n\nconst StopInfoWrapper = styled.article`\n  vertical-align: top;\n`;\n\nconst StopName = styled.h2`\n  margin: 0.5em 0 0.5em 0;\n  font-weight: normal;\n`;\n\nconst Desc = styled.h3`\n  margin: 0 0 1em 0;\n`;\n\nconst StopInfo = ({ stopInfo }) => {\n  return (\n    <StopInfoWrapper>\n      <StopName>{`${stopInfo.name}, ${\n        stopInfo.code\n      } (${stopInfo.distance} m)`}</StopName>\n      <Desc>{stopInfo.desc}</Desc>\n      <Timetable stoptimes={stopInfo.stoptimesWithoutPatterns} />\n    </StopInfoWrapper>\n  );\n};\n\nexport default StopInfo;\n","import React from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport ReactMapboxGl, { Layer, Feature, Popup } from \"react-mapbox-gl\";\n\nimport * as ReactRedux from \"react-redux\";\nimport { fetchNearbyTimetables } from \"./redux\";\n\nimport StopInfo from \"./components/StopInfo.js\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: lightgray;\n  }\n\n  body {\n    margin: 0;\n    font-family: sans-serif;\n    font-weight: bold;\n  }\n`;\n\nconst Map = ReactMapboxGl({\n  accessToken:\n    \"pk.eyJ1Ijoic2FrYXN1dGUtYWxtYSIsImEiOiJjanZ4aGc2OG8wNHM3NDNycnNyNTBhOThlIn0.70Nsp4cpsqajXtCLiFS5aA\"\n});\n\nfunction App(props) {\n  const {\n    geolocation,\n    isCustomLocation,\n    nearbyTimetables,\n    loading,\n    fetchNearbyTimetables\n  } = props;\n\n  console.log(isCustomLocation)\n\n  const urlStr = window.location.href;\n  const url = new URL(urlStr);\n  let zoom = url.searchParams.get(\"zoom\");\n  if (!zoom) {\n    zoom = 15.5\n  }\n\n  React.useEffect(() => {\n    fetchNearbyTimetables();\n  }, [fetchNearbyTimetables]);\n\n  const [stopPopup, setStopPopup] = React.useState(null);\n  return (\n    <main>\n      <GlobalStyle />\n      {loading || !nearbyTimetables ? (\n        <p>loading...</p>\n      ) : (\n        <Map\n          style=\"mapbox://styles/mapbox/light-v9\"\n          containerStyle={{\n            height: \"100vh\",\n            width: \"100vw\"\n          }}\n          center={[geolocation.lon, geolocation.lat]}\n          zoom={[zoom]}\n          onClick={() => setStopPopup(null)}\n        >\n          {!isCustomLocation && (\n            <Layer\n              type=\"circle\"\n              id=\"geolocation\"\n              paint={{ \"circle-radius\": 15, \"circle-color\": \"#ff512c\" }}\n            >\n              <Feature coordinates={[geolocation.lon, geolocation.lat]} />\n            </Layer>\n          )}\n          <Layer\n            type={\"symbol\"}\n            id=\"stops\"\n            layout={{ \"icon-image\": \"bus-15\", \"icon-size\": 1.5 }}\n          >\n            {nearbyTimetables.map(stop => {\n              return (\n                <Feature key={stop.gtfsId} coordinates={[stop.lon, stop.lat]} onClick={() => setStopPopup(stop)} />\n              );\n            })}\n          </Layer>\n          {stopPopup && (\n            <Popup\n              coordinates={[stopPopup.lon, stopPopup.lat]}\n            >\n              <StopInfo\n                key={stopPopup.gtfsId}\n                stopInfo={stopPopup}\n              />\n            </Popup>\n          )}\n        </Map>\n      )}\n    </main>\n  );\n}\n\nconst mapStateToProps = state => ({\n  nearbyTimetables: state.nearbyTimetables,\n  loading: state.loading,\n  geolocation: state.geolocation,\n  isCustomLocation: state.isCustomLocation\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchNearbyTimetables: () => dispatch(fetchNearbyTimetables())\n});\n\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
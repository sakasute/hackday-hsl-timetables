{"version":3,"sources":["redux.js","components/Timetable.js","components/StopInfo.js","App.js","index.js"],"names":["getCurrentPosition","options","arguments","length","undefined","Promise","resolve","reject","navigator","geolocation","composeEnhancers","window","compose","createStore","state","action","type","Object","objectSpread","loading","nearbyTimetables","payload","response","swipeStatus","applyMiddleware","thunk","TimetableList","styled","ul","_templateObject","Timetable","_ref","stoptimes","now","Date","midnight","getFullYear","getMonth","getDate","secondsSinceMidnight","Math","floor","getTime","nextStops","map","stoptime","react_default","a","createElement","concat","headsign","arrivalTime","max","calculateArrivalMinutes","realtimeArrival","StopInfoWrapper","article","StopInfo_templateObject","StopName","h2","_templateObject2","Desc","h3","_templateObject3","StopInfo","stopInfo","distance","name","code","desc","components_Timetable","stoptimesWithoutPatterns","GlobalStyle","createGlobalStyle","App_templateObject","ReactRedux","dispatch","fetchNearbyTimetables","asyncToGenerator","regenerator_default","mark","_callee","urlStr","url","lat","lon","radius","position","query","wrap","_context","prev","next","location","href","URL","searchParams","get","sent","coords","latitude","longitude","parseInt","parseFloat","graphqlRequest","then","data","catch","error","console","log","stop","_x","apply","this","props","React","useEffect","stopsByRadius","edges","edge","components_StopInfo","node","ReactDOM","render","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2bdac042.chunk.js","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { request as graphqlRequest } from \"graphql-request\";\nimport thunk from \"redux-thunk\";\n\nconst SWIPE_RIGHT = \"SWIPE_RIGHT\";\nconst SWIPE_LEFT = \"SWIPE_LEFT\";\nconst FETCH_START = \"FETCH_START\";\nconst FETCH_SUCCESS = \"FETCH_SUCCESS\";\n\nfunction getCurrentPosition(options = {}) {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  });\n}\n\nexport const fetchNearbyTimetables = () => async dispatch => {\n  dispatch({ type: FETCH_START });\n\n  const urlStr = window.location.href;\n  const url = new URL(urlStr);\n\n  let lat = url.searchParams.get(\"lat\");\n  let lon = url.searchParams.get(\"lon\");\n  let radius = url.searchParams.get(\"radius\");\n\n  if (!lat || !lon) {\n    const position = await getCurrentPosition();\n    lat = position.coords.latitude;\n    lon = position.coords.longitude;\n    radius = parseInt(radius);\n  } else {\n    lat = parseFloat(lat);\n    lon = parseFloat(lon);\n    radius = parseInt(radius);\n  }\n\n  const query = `{\n    stopsByRadius(lat:${lat}, lon:${lon}, radius:${radius}) {\n      edges {\n        node {\n          stop { \n            gtfsId \n            name\n            code\n            desc\n            lat\n            lon\n            stoptimesWithoutPatterns {\n              scheduledArrival\n              realtimeArrival\n              arrivalDelay\n              scheduledDeparture\n              realtimeDeparture\n              departureDelay\n              realtime\n              realtimeState\n              serviceDay\n              headsign\n            }\n          }\n          distance\n        }\n      }\n    }\n  }`;\n\n  graphqlRequest(\n    \"https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql\",\n    query\n  )\n    .then(data => dispatch({type: FETCH_SUCCESS, payload: data}))\n    .catch(error => console.log(error));\n};\n\n// export const swipeRight = () => ({\n//   type: SWIPE_RIGHT\n// });\n//\n// export const swipeLeft = () => ({\n//   type: SWIPE_LEFT\n// });\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case FETCH_START:\n      return { ...state, loading: true };\n    case FETCH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        nearbyTimetables: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Create redux store.\nconst composeEnhancers =\n  window[\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\"] || compose;\nexport default createStore(\n  reducer,\n  { loading: false, response: null, swipeStatus: \"INITIAL\" },\n  composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst TimetableList = styled.ul`\n  list-style: none;\n  padding-left: 5px;\n\n  li {\n    padding: 5px 0;\n    font-weight: normal;\n  }\n`;\n\nconst Timetable = ({ stoptimes }) => {\n  const now = new Date();\n  const midnight = new Date(\n    now.getFullYear(),\n    now.getMonth(),\n    now.getDate(),\n    0,\n    0,\n    0\n  );\n\n  const calculateArrivalMinutes = (arrivalTime, secondsSinceMidnight) => {\n    return Math.max(Math.floor((arrivalTime - secondsSinceMidnight) / 60), 0);\n  };\n\n  const secondsSinceMidnight = Math.floor(\n    (now.getTime() - midnight.getTime()) / 1000\n  );\n\n  const nextStops = stoptimes.map(stoptime => (\n    <li>{`${stoptime.headsign} (${calculateArrivalMinutes(\n      stoptime.realtimeArrival,\n      secondsSinceMidnight\n    )} min)`}</li>\n  ));\n\n  return <TimetableList>{nextStops}</TimetableList>;\n};\n\nexport default Timetable;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Timetable from './Timetable';\n\nconst StopInfoWrapper = styled.article`\n  display: inline-block;\n  vertical-align: top;\n  width: 300px;\n  margin: 25px;\n  padding: 15px;\n  border: 1px solid black;\n  background-color: white;\n`;\n\nconst StopName = styled.h2`\n  margin: 0.5em 0 0.5em 0;\n  font-weight: normal;\n`;\n\nconst Desc = styled.h3`\n  margin: 0 0 1em 0;\n`;\n\nconst StopInfo = ({ stopInfo, distance }) => {\n  return (\n    <StopInfoWrapper>\n      <StopName>{`${stopInfo.name}, ${stopInfo.code} (${distance} m)`}</StopName>\n      <Desc>{stopInfo.desc}</Desc>\n      <Timetable stoptimes={stopInfo.stoptimesWithoutPatterns}/>\n    </StopInfoWrapper>\n  );\n};\n\nexport default StopInfo;\n","import React from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nimport * as ReactRedux from \"react-redux\";\nimport { fetchNearbyTimetables } from \"./redux\";\n\nimport StopInfo from './components/StopInfo.js';\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n  background-color: lightgray;\n  }\n\n  body {\n    margin: 0;\n    font-family: sans-serif;\n    font-weight: bold;\n  }\n`;\n\nfunction App(props) {\n  const { nearbyTimetables, loading, fetchNearbyTimetables } = props;\n\n  React.useEffect(() => {\n    fetchNearbyTimetables();\n  }, []);\n\n  return (\n    <div>\n      <GlobalStyle />\n      {loading || !nearbyTimetables ? (\n        <p>loading...</p>\n      ) : (\n        nearbyTimetables.stopsByRadius.edges.map(edge => (<StopInfo stopInfo={edge.node.stop} distance={edge.node.distance}/>))\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  nearbyTimetables: state.nearbyTimetables,\n  loading: state.loading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchNearbyTimetables: () => dispatch(fetchNearbyTimetables())\n});\n\nexport default ReactRedux.connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}